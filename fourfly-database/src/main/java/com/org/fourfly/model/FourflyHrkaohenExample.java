package com.org.fourfly.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class FourflyHrkaohenExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public FourflyHrkaohenExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMidIsNull() {
            addCriterion("mid is null");
            return (Criteria) this;
        }

        public Criteria andMidIsNotNull() {
            addCriterion("mid is not null");
            return (Criteria) this;
        }

        public Criteria andMidEqualTo(Short value) {
            addCriterion("mid =", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotEqualTo(Short value) {
            addCriterion("mid <>", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidGreaterThan(Short value) {
            addCriterion("mid >", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidGreaterThanOrEqualTo(Short value) {
            addCriterion("mid >=", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidLessThan(Short value) {
            addCriterion("mid <", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidLessThanOrEqualTo(Short value) {
            addCriterion("mid <=", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidIn(List<Short> values) {
            addCriterion("mid in", values, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotIn(List<Short> values) {
            addCriterion("mid not in", values, "mid");
            return (Criteria) this;
        }

        public Criteria andMidBetween(Short value1, Short value2) {
            addCriterion("mid between", value1, value2, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotBetween(Short value1, Short value2) {
            addCriterion("mid not between", value1, value2, "mid");
            return (Criteria) this;
        }

        public Criteria andSortIsNull() {
            addCriterion("sort is null");
            return (Criteria) this;
        }

        public Criteria andSortIsNotNull() {
            addCriterion("sort is not null");
            return (Criteria) this;
        }

        public Criteria andSortEqualTo(Short value) {
            addCriterion("sort =", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotEqualTo(Short value) {
            addCriterion("sort <>", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThan(Short value) {
            addCriterion("sort >", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanOrEqualTo(Short value) {
            addCriterion("sort >=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThan(Short value) {
            addCriterion("sort <", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThanOrEqualTo(Short value) {
            addCriterion("sort <=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortIn(List<Short> values) {
            addCriterion("sort in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotIn(List<Short> values) {
            addCriterion("sort not in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortBetween(Short value1, Short value2) {
            addCriterion("sort between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotBetween(Short value1, Short value2) {
            addCriterion("sort not between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andPfnameIsNull() {
            addCriterion("pfname is null");
            return (Criteria) this;
        }

        public Criteria andPfnameIsNotNull() {
            addCriterion("pfname is not null");
            return (Criteria) this;
        }

        public Criteria andPfnameEqualTo(String value) {
            addCriterion("pfname =", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameNotEqualTo(String value) {
            addCriterion("pfname <>", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameGreaterThan(String value) {
            addCriterion("pfname >", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameGreaterThanOrEqualTo(String value) {
            addCriterion("pfname >=", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameLessThan(String value) {
            addCriterion("pfname <", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameLessThanOrEqualTo(String value) {
            addCriterion("pfname <=", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameLike(String value) {
            addCriterion("pfname like", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameNotLike(String value) {
            addCriterion("pfname not like", value, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameIn(List<String> values) {
            addCriterion("pfname in", values, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameNotIn(List<String> values) {
            addCriterion("pfname not in", values, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameBetween(String value1, String value2) {
            addCriterion("pfname between", value1, value2, "pfname");
            return (Criteria) this;
        }

        public Criteria andPfnameNotBetween(String value1, String value2) {
            addCriterion("pfname not between", value1, value2, "pfname");
            return (Criteria) this;
        }

        public Criteria andPftypeIsNull() {
            addCriterion("pftype is null");
            return (Criteria) this;
        }

        public Criteria andPftypeIsNotNull() {
            addCriterion("pftype is not null");
            return (Criteria) this;
        }

        public Criteria andPftypeEqualTo(String value) {
            addCriterion("pftype =", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeNotEqualTo(String value) {
            addCriterion("pftype <>", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeGreaterThan(String value) {
            addCriterion("pftype >", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeGreaterThanOrEqualTo(String value) {
            addCriterion("pftype >=", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeLessThan(String value) {
            addCriterion("pftype <", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeLessThanOrEqualTo(String value) {
            addCriterion("pftype <=", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeLike(String value) {
            addCriterion("pftype like", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeNotLike(String value) {
            addCriterion("pftype not like", value, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeIn(List<String> values) {
            addCriterion("pftype in", values, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeNotIn(List<String> values) {
            addCriterion("pftype not in", values, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeBetween(String value1, String value2) {
            addCriterion("pftype between", value1, value2, "pftype");
            return (Criteria) this;
        }

        public Criteria andPftypeNotBetween(String value1, String value2) {
            addCriterion("pftype not between", value1, value2, "pftype");
            return (Criteria) this;
        }

        public Criteria andPfrenIsNull() {
            addCriterion("pfren is null");
            return (Criteria) this;
        }

        public Criteria andPfrenIsNotNull() {
            addCriterion("pfren is not null");
            return (Criteria) this;
        }

        public Criteria andPfrenEqualTo(String value) {
            addCriterion("pfren =", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenNotEqualTo(String value) {
            addCriterion("pfren <>", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenGreaterThan(String value) {
            addCriterion("pfren >", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenGreaterThanOrEqualTo(String value) {
            addCriterion("pfren >=", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenLessThan(String value) {
            addCriterion("pfren <", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenLessThanOrEqualTo(String value) {
            addCriterion("pfren <=", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenLike(String value) {
            addCriterion("pfren like", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenNotLike(String value) {
            addCriterion("pfren not like", value, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenIn(List<String> values) {
            addCriterion("pfren in", values, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenNotIn(List<String> values) {
            addCriterion("pfren not in", values, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenBetween(String value1, String value2) {
            addCriterion("pfren between", value1, value2, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenNotBetween(String value1, String value2) {
            addCriterion("pfren not between", value1, value2, "pfren");
            return (Criteria) this;
        }

        public Criteria andPfrenidIsNull() {
            addCriterion("pfrenid is null");
            return (Criteria) this;
        }

        public Criteria andPfrenidIsNotNull() {
            addCriterion("pfrenid is not null");
            return (Criteria) this;
        }

        public Criteria andPfrenidEqualTo(String value) {
            addCriterion("pfrenid =", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidNotEqualTo(String value) {
            addCriterion("pfrenid <>", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidGreaterThan(String value) {
            addCriterion("pfrenid >", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidGreaterThanOrEqualTo(String value) {
            addCriterion("pfrenid >=", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidLessThan(String value) {
            addCriterion("pfrenid <", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidLessThanOrEqualTo(String value) {
            addCriterion("pfrenid <=", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidLike(String value) {
            addCriterion("pfrenid like", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidNotLike(String value) {
            addCriterion("pfrenid not like", value, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidIn(List<String> values) {
            addCriterion("pfrenid in", values, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidNotIn(List<String> values) {
            addCriterion("pfrenid not in", values, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidBetween(String value1, String value2) {
            addCriterion("pfrenid between", value1, value2, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfrenidNotBetween(String value1, String value2) {
            addCriterion("pfrenid not between", value1, value2, "pfrenid");
            return (Criteria) this;
        }

        public Criteria andPfweightIsNull() {
            addCriterion("pfweight is null");
            return (Criteria) this;
        }

        public Criteria andPfweightIsNotNull() {
            addCriterion("pfweight is not null");
            return (Criteria) this;
        }

        public Criteria andPfweightEqualTo(BigDecimal value) {
            addCriterion("pfweight =", value, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightNotEqualTo(BigDecimal value) {
            addCriterion("pfweight <>", value, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightGreaterThan(BigDecimal value) {
            addCriterion("pfweight >", value, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pfweight >=", value, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightLessThan(BigDecimal value) {
            addCriterion("pfweight <", value, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pfweight <=", value, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightIn(List<BigDecimal> values) {
            addCriterion("pfweight in", values, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightNotIn(List<BigDecimal> values) {
            addCriterion("pfweight not in", values, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pfweight between", value1, value2, "pfweight");
            return (Criteria) this;
        }

        public Criteria andPfweightNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pfweight not between", value1, value2, "pfweight");
            return (Criteria) this;
        }

        public Criteria andComidIsNull() {
            addCriterion("comid is null");
            return (Criteria) this;
        }

        public Criteria andComidIsNotNull() {
            addCriterion("comid is not null");
            return (Criteria) this;
        }

        public Criteria andComidEqualTo(Short value) {
            addCriterion("comid =", value, "comid");
            return (Criteria) this;
        }

        public Criteria andComidNotEqualTo(Short value) {
            addCriterion("comid <>", value, "comid");
            return (Criteria) this;
        }

        public Criteria andComidGreaterThan(Short value) {
            addCriterion("comid >", value, "comid");
            return (Criteria) this;
        }

        public Criteria andComidGreaterThanOrEqualTo(Short value) {
            addCriterion("comid >=", value, "comid");
            return (Criteria) this;
        }

        public Criteria andComidLessThan(Short value) {
            addCriterion("comid <", value, "comid");
            return (Criteria) this;
        }

        public Criteria andComidLessThanOrEqualTo(Short value) {
            addCriterion("comid <=", value, "comid");
            return (Criteria) this;
        }

        public Criteria andComidIn(List<Short> values) {
            addCriterion("comid in", values, "comid");
            return (Criteria) this;
        }

        public Criteria andComidNotIn(List<Short> values) {
            addCriterion("comid not in", values, "comid");
            return (Criteria) this;
        }

        public Criteria andComidBetween(Short value1, Short value2) {
            addCriterion("comid between", value1, value2, "comid");
            return (Criteria) this;
        }

        public Criteria andComidNotBetween(Short value1, Short value2) {
            addCriterion("comid not between", value1, value2, "comid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fourfly_hrkaohen
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}