package com.org.fourfly.model;

import java.util.ArrayList;
import java.util.List;

public class FourflyFlowExtentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public FourflyFlowExtentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRecenameIsNull() {
            addCriterion("recename is null");
            return (Criteria) this;
        }

        public Criteria andRecenameIsNotNull() {
            addCriterion("recename is not null");
            return (Criteria) this;
        }

        public Criteria andRecenameEqualTo(String value) {
            addCriterion("recename =", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameNotEqualTo(String value) {
            addCriterion("recename <>", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameGreaterThan(String value) {
            addCriterion("recename >", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameGreaterThanOrEqualTo(String value) {
            addCriterion("recename >=", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameLessThan(String value) {
            addCriterion("recename <", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameLessThanOrEqualTo(String value) {
            addCriterion("recename <=", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameLike(String value) {
            addCriterion("recename like", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameNotLike(String value) {
            addCriterion("recename not like", value, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameIn(List<String> values) {
            addCriterion("recename in", values, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameNotIn(List<String> values) {
            addCriterion("recename not in", values, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameBetween(String value1, String value2) {
            addCriterion("recename between", value1, value2, "recename");
            return (Criteria) this;
        }

        public Criteria andRecenameNotBetween(String value1, String value2) {
            addCriterion("recename not between", value1, value2, "recename");
            return (Criteria) this;
        }

        public Criteria andReceidIsNull() {
            addCriterion("receid is null");
            return (Criteria) this;
        }

        public Criteria andReceidIsNotNull() {
            addCriterion("receid is not null");
            return (Criteria) this;
        }

        public Criteria andReceidEqualTo(String value) {
            addCriterion("receid =", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidNotEqualTo(String value) {
            addCriterion("receid <>", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidGreaterThan(String value) {
            addCriterion("receid >", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidGreaterThanOrEqualTo(String value) {
            addCriterion("receid >=", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidLessThan(String value) {
            addCriterion("receid <", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidLessThanOrEqualTo(String value) {
            addCriterion("receid <=", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidLike(String value) {
            addCriterion("receid like", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidNotLike(String value) {
            addCriterion("receid not like", value, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidIn(List<String> values) {
            addCriterion("receid in", values, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidNotIn(List<String> values) {
            addCriterion("receid not in", values, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidBetween(String value1, String value2) {
            addCriterion("receid between", value1, value2, "receid");
            return (Criteria) this;
        }

        public Criteria andReceidNotBetween(String value1, String value2) {
            addCriterion("receid not between", value1, value2, "receid");
            return (Criteria) this;
        }

        public Criteria andModeidIsNull() {
            addCriterion("modeid is null");
            return (Criteria) this;
        }

        public Criteria andModeidIsNotNull() {
            addCriterion("modeid is not null");
            return (Criteria) this;
        }

        public Criteria andModeidEqualTo(Short value) {
            addCriterion("modeid =", value, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidNotEqualTo(Short value) {
            addCriterion("modeid <>", value, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidGreaterThan(Short value) {
            addCriterion("modeid >", value, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidGreaterThanOrEqualTo(Short value) {
            addCriterion("modeid >=", value, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidLessThan(Short value) {
            addCriterion("modeid <", value, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidLessThanOrEqualTo(Short value) {
            addCriterion("modeid <=", value, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidIn(List<Short> values) {
            addCriterion("modeid in", values, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidNotIn(List<Short> values) {
            addCriterion("modeid not in", values, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidBetween(Short value1, Short value2) {
            addCriterion("modeid between", value1, value2, "modeid");
            return (Criteria) this;
        }

        public Criteria andModeidNotBetween(Short value1, Short value2) {
            addCriterion("modeid not between", value1, value2, "modeid");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Boolean value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Boolean value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Boolean value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Boolean value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Boolean value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Boolean> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Boolean> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Boolean value1, Boolean value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andWherestrIsNull() {
            addCriterion("wherestr is null");
            return (Criteria) this;
        }

        public Criteria andWherestrIsNotNull() {
            addCriterion("wherestr is not null");
            return (Criteria) this;
        }

        public Criteria andWherestrEqualTo(String value) {
            addCriterion("wherestr =", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrNotEqualTo(String value) {
            addCriterion("wherestr <>", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrGreaterThan(String value) {
            addCriterion("wherestr >", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrGreaterThanOrEqualTo(String value) {
            addCriterion("wherestr >=", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrLessThan(String value) {
            addCriterion("wherestr <", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrLessThanOrEqualTo(String value) {
            addCriterion("wherestr <=", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrLike(String value) {
            addCriterion("wherestr like", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrNotLike(String value) {
            addCriterion("wherestr not like", value, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrIn(List<String> values) {
            addCriterion("wherestr in", values, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrNotIn(List<String> values) {
            addCriterion("wherestr not in", values, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrBetween(String value1, String value2) {
            addCriterion("wherestr between", value1, value2, "wherestr");
            return (Criteria) this;
        }

        public Criteria andWherestrNotBetween(String value1, String value2) {
            addCriterion("wherestr not between", value1, value2, "wherestr");
            return (Criteria) this;
        }

        public Criteria andExplainIsNull() {
            addCriterion("explain is null");
            return (Criteria) this;
        }

        public Criteria andExplainIsNotNull() {
            addCriterion("explain is not null");
            return (Criteria) this;
        }

        public Criteria andExplainEqualTo(String value) {
            addCriterion("explain =", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainNotEqualTo(String value) {
            addCriterion("explain <>", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainGreaterThan(String value) {
            addCriterion("explain >", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainGreaterThanOrEqualTo(String value) {
            addCriterion("explain >=", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainLessThan(String value) {
            addCriterion("explain <", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainLessThanOrEqualTo(String value) {
            addCriterion("explain <=", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainLike(String value) {
            addCriterion("explain like", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainNotLike(String value) {
            addCriterion("explain not like", value, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainIn(List<String> values) {
            addCriterion("explain in", values, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainNotIn(List<String> values) {
            addCriterion("explain not in", values, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainBetween(String value1, String value2) {
            addCriterion("explain between", value1, value2, "explain");
            return (Criteria) this;
        }

        public Criteria andExplainNotBetween(String value1, String value2) {
            addCriterion("explain not between", value1, value2, "explain");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Boolean value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Boolean value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Boolean value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Boolean value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Boolean value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Boolean> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Boolean> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Boolean value1, Boolean value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andWhereidIsNull() {
            addCriterion("whereid is null");
            return (Criteria) this;
        }

        public Criteria andWhereidIsNotNull() {
            addCriterion("whereid is not null");
            return (Criteria) this;
        }

        public Criteria andWhereidEqualTo(Short value) {
            addCriterion("whereid =", value, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidNotEqualTo(Short value) {
            addCriterion("whereid <>", value, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidGreaterThan(Short value) {
            addCriterion("whereid >", value, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidGreaterThanOrEqualTo(Short value) {
            addCriterion("whereid >=", value, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidLessThan(Short value) {
            addCriterion("whereid <", value, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidLessThanOrEqualTo(Short value) {
            addCriterion("whereid <=", value, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidIn(List<Short> values) {
            addCriterion("whereid in", values, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidNotIn(List<Short> values) {
            addCriterion("whereid not in", values, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidBetween(Short value1, Short value2) {
            addCriterion("whereid between", value1, value2, "whereid");
            return (Criteria) this;
        }

        public Criteria andWhereidNotBetween(Short value1, Short value2) {
            addCriterion("whereid not between", value1, value2, "whereid");
            return (Criteria) this;
        }

        public Criteria andFieldstrIsNull() {
            addCriterion("fieldstr is null");
            return (Criteria) this;
        }

        public Criteria andFieldstrIsNotNull() {
            addCriterion("fieldstr is not null");
            return (Criteria) this;
        }

        public Criteria andFieldstrEqualTo(String value) {
            addCriterion("fieldstr =", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrNotEqualTo(String value) {
            addCriterion("fieldstr <>", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrGreaterThan(String value) {
            addCriterion("fieldstr >", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrGreaterThanOrEqualTo(String value) {
            addCriterion("fieldstr >=", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrLessThan(String value) {
            addCriterion("fieldstr <", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrLessThanOrEqualTo(String value) {
            addCriterion("fieldstr <=", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrLike(String value) {
            addCriterion("fieldstr like", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrNotLike(String value) {
            addCriterion("fieldstr not like", value, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrIn(List<String> values) {
            addCriterion("fieldstr in", values, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrNotIn(List<String> values) {
            addCriterion("fieldstr not in", values, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrBetween(String value1, String value2) {
            addCriterion("fieldstr between", value1, value2, "fieldstr");
            return (Criteria) this;
        }

        public Criteria andFieldstrNotBetween(String value1, String value2) {
            addCriterion("fieldstr not between", value1, value2, "fieldstr");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fourfly_flow_extent
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}